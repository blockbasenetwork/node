// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: TransactionProto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace BlockBase.Domain.Protos {

  /// <summary>Holder for reflection information generated from TransactionProto.proto</summary>
  public static partial class TransactionProtoReflection {

    #region Descriptor
    /// <summary>File descriptor for TransactionProto.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransactionProtoReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZUcmFuc2FjdGlvblByb3RvLnByb3RvEhdCbG9ja0Jhc2UuRG9tYWluLlBy",
            "b3RvcyKgAQoQVHJhbnNhY3Rpb25Qcm90bxIXCg9UcmFuc2FjdGlvbkhhc2gY",
            "ASABKAwSEQoJU2lnbmF0dXJlGAIgASgJEhEKCVRpbWVzdGFtcBgDIAEoBBIW",
            "Cg5TZXF1ZW5jZU51bWJlchgEIAEoBBIMCgRKc29uGAUgASgJEhEKCUJsb2Nr",
            "SGFzaBgGIAEoDBIUCgxEYXRhYmFzZU5hbWUYByABKAliBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::BlockBase.Domain.Protos.TransactionProto), global::BlockBase.Domain.Protos.TransactionProto.Parser, new[]{ "TransactionHash", "Signature", "Timestamp", "SequenceNumber", "Json", "BlockHash", "DatabaseName" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TransactionProto : pb::IMessage<TransactionProto> {
    private static readonly pb::MessageParser<TransactionProto> _parser = new pb::MessageParser<TransactionProto>(() => new TransactionProto());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionProto> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::BlockBase.Domain.Protos.TransactionProtoReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionProto() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionProto(TransactionProto other) : this() {
      transactionHash_ = other.transactionHash_;
      signature_ = other.signature_;
      timestamp_ = other.timestamp_;
      sequenceNumber_ = other.sequenceNumber_;
      json_ = other.json_;
      blockHash_ = other.blockHash_;
      databaseName_ = other.databaseName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionProto Clone() {
      return new TransactionProto(this);
    }

    /// <summary>Field number for the "TransactionHash" field.</summary>
    public const int TransactionHashFieldNumber = 1;
    private pb::ByteString transactionHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString TransactionHash {
      get { return transactionHash_; }
      set {
        transactionHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private string signature_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private ulong timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "SequenceNumber" field.</summary>
    public const int SequenceNumberFieldNumber = 4;
    private ulong sequenceNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong SequenceNumber {
      get { return sequenceNumber_; }
      set {
        sequenceNumber_ = value;
      }
    }

    /// <summary>Field number for the "Json" field.</summary>
    public const int JsonFieldNumber = 5;
    private string json_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Json {
      get { return json_; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BlockHash" field.</summary>
    public const int BlockHashFieldNumber = 6;
    private pb::ByteString blockHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString BlockHash {
      get { return blockHash_; }
      set {
        blockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DatabaseName" field.</summary>
    public const int DatabaseNameFieldNumber = 7;
    private string databaseName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatabaseName {
      get { return databaseName_; }
      set {
        databaseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionProto);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionProto other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TransactionHash != other.TransactionHash) return false;
      if (Signature != other.Signature) return false;
      if (Timestamp != other.Timestamp) return false;
      if (SequenceNumber != other.SequenceNumber) return false;
      if (Json != other.Json) return false;
      if (BlockHash != other.BlockHash) return false;
      if (DatabaseName != other.DatabaseName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TransactionHash.Length != 0) hash ^= TransactionHash.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (Timestamp != 0UL) hash ^= Timestamp.GetHashCode();
      if (SequenceNumber != 0UL) hash ^= SequenceNumber.GetHashCode();
      if (Json.Length != 0) hash ^= Json.GetHashCode();
      if (BlockHash.Length != 0) hash ^= BlockHash.GetHashCode();
      if (DatabaseName.Length != 0) hash ^= DatabaseName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TransactionHash.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(TransactionHash);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Signature);
      }
      if (Timestamp != 0UL) {
        output.WriteRawTag(24);
        output.WriteUInt64(Timestamp);
      }
      if (SequenceNumber != 0UL) {
        output.WriteRawTag(32);
        output.WriteUInt64(SequenceNumber);
      }
      if (Json.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Json);
      }
      if (BlockHash.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(BlockHash);
      }
      if (DatabaseName.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(DatabaseName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TransactionHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(TransactionHash);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      if (Timestamp != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(Timestamp);
      }
      if (SequenceNumber != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(SequenceNumber);
      }
      if (Json.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Json);
      }
      if (BlockHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(BlockHash);
      }
      if (DatabaseName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatabaseName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionProto other) {
      if (other == null) {
        return;
      }
      if (other.TransactionHash.Length != 0) {
        TransactionHash = other.TransactionHash;
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      if (other.Timestamp != 0UL) {
        Timestamp = other.Timestamp;
      }
      if (other.SequenceNumber != 0UL) {
        SequenceNumber = other.SequenceNumber;
      }
      if (other.Json.Length != 0) {
        Json = other.Json;
      }
      if (other.BlockHash.Length != 0) {
        BlockHash = other.BlockHash;
      }
      if (other.DatabaseName.Length != 0) {
        DatabaseName = other.DatabaseName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TransactionHash = input.ReadBytes();
            break;
          }
          case 18: {
            Signature = input.ReadString();
            break;
          }
          case 24: {
            Timestamp = input.ReadUInt64();
            break;
          }
          case 32: {
            SequenceNumber = input.ReadUInt64();
            break;
          }
          case 42: {
            Json = input.ReadString();
            break;
          }
          case 50: {
            BlockHash = input.ReadBytes();
            break;
          }
          case 58: {
            DatabaseName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
